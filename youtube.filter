 ### version 3.2.0 from 20.05.2024

FILTER: youtube-enabled-channels

### ENABLED CHANNELS
s@</body>@<script>var enabled_channels = ["kompege", "hitman_math", "yandexeducation", "otus_education", "EvgenijJobs", "infbu", "AlexDanov", "devinf74", "plugar_inf", "trushinbv", "umsch_i_oge", "umsch_inf", "umschool", "umsch_r", "umschmath", "umsch_phys", "umsch_h", "umsch_bm", "umsch_o", "umsch_b", "umsch_e", "umsch_hist", "litumsch", "umschgeo", "EXtremum2023", "quantum__school", "flash_ege", "inf99ballov", "MolodoyRepet", "pvictor54", "user-jg3dk6bb6j", "pro100ege68", "maxim_egeinf", "LomonosovSchool", "lomonosov_informatics", "lomonosov_social", "lomonosov_russian", "lomonosov_english", "lomonosov_biology", "lomonosov_history", "egekotolis", "EGE_SoS", "shkolkovo", "inf_shkolkovo", "shkolkovo-OGE", "shkolkovo_phys", "shkolkovo_bio", "iziege_ali", "ShkolkovoGk", "histructor", "shkolkovo_obsh", "shkolkovo_inf_oge", "mutagenege", "shkolkovo_olymp", "user-re7vk3nw6q", "user-un1fe6js3h", "ushkov_rus", "umskrusoge", "sotochka", "Veraegeflex", "rus_ege_kudlai", "MFIZme", "Vershinin_Roman", "DataScienceGuy", "stepik_education", "Informatika_IKT", "mrfarcrys", "pomoshkorzh", "selfedu_rus", "80Ballov", "analitiqtutor", "rodya_inf", "itproger", "infourok", "RkirilinaRu", "romanshamin119", "matemanyaege", "video-mccme", "infawitham", "ListenIT_channel", "merionacademy", "eager4IT", "netskills", "pifagor1", "profimatika", "egebezboli", "AlekOS", "PhysicsOGE", "pygen_ru", "tkhirianov", "ironskills-1c", "SuperrTutor", "it.polikarpova", "Profimatika_vyshmat", "Postupashki"];</script></body>@Uisg



FILTER: youtube-player-injection

##### Injections for */base.js script
s@var _yt_player={};@var _yt_player={};function sanitizeUri(uri){let ampersand = String.fromCharCode(38); pos = uri.indexOf(ampersand); if(pos < 0 || pos === null || pos === undefined){return uri;}; return uri.slice(0, pos);}; var startLocationHref = sanitizeUri(window.location.href); function ifPrivoxyDoesNotWorkAlternateCheck(){if (startLocationHref !== sanitizeUri(window.location.href)){location.reload();};  }; @Uisg

s@a=new Request@ ifPrivoxyDoesNotWorkAlternateCheck(); a=new Request@Uisg ### "a" may be changed on "b" in new version base.js
s@b=new Request@ ifPrivoxyDoesNotWorkAlternateCheck(); b=new Request@Uisg ### "b" may be changed on "a" in new version base.js



FILTER: youtube-polymer-block

##### desktop_polymer_enable_poly_si.js
s@</body>@<script>function removeTagParent(tag) {var elem = document.getElementsByTagName(tag); if(elem[0] === null || elem[0] === undefined){return false;}; elem = elem[0].parentNode; elem.style.display = 'none'; elem.remove(); };  function removeVideo() {removeTagParent("ytd-video-preview");  removeTagParent("ytd-rich-grid-row");  removeTagParent("ytd-rich-section-renderer");  removeTagParent("ytd-rich-item-renderer");  };  window.onload = function() { removeVideo(); };  window.addEventListener('scroll', removeVideo); window.addEventListener('mousemove', removeVideo);</script></body>@Uisg



FILTER: youtube-search-result-scan

s@</body>@<script>function getChannelYtd(ytd){var atags = ytd.getElementsByTagName('a'); if(atags[0] === null || atags[0] === undefined){return false;}; for (let i = 0; i < atags.length; i++) {let href = atags[i].getAttribute('href'); if ('/'+String.fromCharCode(64) == href.slice(0,2)) {channel = href.slice(2); return channel; };} return false; };     function check_search_results(){var tags = ["ytd-video-renderer", "ytd-playlist-renderer", "ytd-channel-renderer", "ytd-shelf-renderer"]; for (let i = 0; i < tags.length; i++){alert(tags[i]);};  };     function check_element(tag){var elems = document.getElementsByTagName(tag); Array.prototype.forEach.call(elems, function(elem) { let channel = getChannelYtd(elem); if (true !== isChannelEnabled(channel)){elem.style.display = 'none'; elem.remove(); } } );};     function check_search_results(){var tags = ["ytd-video-renderer", "ytd-playlist-renderer", "ytd-channel-renderer", "ytd-shelf-renderer"]; for (let i = 0; i < tags.length; i++){check_element(tags[i]);};  };     function delete_shorts(){check_element("ytd-reel-shelf-renderer");};    window.onload = function() { check_search_results };   window.addEventListener('scroll', check_search_results);   window.addEventListener('mousemove', check_search_results);   window.onload = function() { delete_shorts };   window.addEventListener('scroll', delete_shorts);   window.addEventListener('mousemove', delete_shorts);</script></body>@Uisg



#####FILTER: youtube-video-preview-block
#####s@/base.js@/haxer-base.js@Uisg



FILTER: youtube-common

s@</body>@<script>function sanitizeUri(uri){let ampersand = String.fromCharCode(38); pos = uri.indexOf(ampersand); if(pos < 0 || pos === null || pos === undefined){return uri;}; return uri.slice(0, pos);};      var startLocationHref = sanitizeUri(window.location.href); var dog = String.fromCharCode(64); var quote = String.fromCharCode(34); var question = String.fromCharCode(63);     function getChannelNameFromLocation() {let channel = false; if("www.youtube.com/" + dog == window.location.href.substr(8,17)){channel = window.location.href.substr(25);} else {return false}; let pos = channel.indexOf(question); if(pos < 0 || pos === null || pos === undefined){} else { channel = channel.slice(0, pos); };   pos = channel.indexOf("/"); if(pos < 0 || pos === null || pos === undefined){} else { channel = channel.slice(0, pos); };   return channel;};     function getChannelNameFromHTML() {let channel = false; let html = document.body.outerHTML; let substr = "<link itemprop="+quote+"url"+quote+" href="+quote+"http://www.youtube.com/"+dog; pos = html.indexOf(substr); if(pos < 0 || pos === null || pos === undefined) {substr = "<link itemprop="+quote+"url"+quote+" href="+quote+"https://www.youtube.com/"+dog; pos = html.indexOf(substr); if(pos < 0 || pos === null || pos === undefined){return false;};} html = html.slice(pos + substr.length); pos = html.indexOf(quote); if(pos < 0 || pos === null || pos === undefined){return false;}; channel = html.slice(0, pos); if(channel === "" || channel === null || channel === undefined){return false;}; return channel; };     function getChannelNameFromJs() {let channel = false; let html = document.body.innerHTML; let substr = quote + "ownerProfileUrl" + quote; let pos = html.indexOf(substr); html = html.slice(pos+18); pos = html.indexOf(quote+"/"+dog); channel = html.slice(pos+3); if(channel === "" || channel === null || channel === undefined){return false;}; pos = channel.indexOf(quote); if(pos < 0 || pos === null || pos === undefined){return channel;} else { return channel.slice(0, pos); }; };     function getChannelName(){if (isChannelPage()){return getChannelNameFromLocation();} let channel = getChannelNameFromHTML(); if (false == channel) {channel = getChannelNameFromJs();}; return channel; };     function isMainPage(){let path = window.location.href.substr(23); if("/" == path){return true;}; return false;};     function isChannelPage(){let path = window.location.href.substr(23); if(dog == path.slice(1,2)){return true;}; return false;};     function isResultPage(){let path = window.location.href.substr(23); if("/result" == path.slice(0,7)){return true;}; return false;};     function isWatchPage(){let path = window.location.href.substr(23); if("/watch" == path.slice(0,6)){return true;}; return false;};     function pathCheck(){if (isMainPage() || isChannelPage() || isResultPage()){return true;}; return false;};     function isChannelEnabled(channel) {if (false == enabled_channels.includes(channel)){return false;}; return true;};     function error_redirect() {window.location.replace("https://www.youtube.com/error" + window.location.href.substr(23));};     function clickDisabler(e) {e.stopPropagation(); e.preventDefault();}     function checkIsPageCached(){if (startLocationHref !== sanitizeUri(window.location.href)){document.addEventListener("click", clickDisabler, true); location.reload(); return false;}; if(isMainPage() || isResultPage()){return true;}; let channel = getChannelName(); if (false == isChannelEnabled(channel)){error_redirect(); return false;}; return true;};   window.addEventListener("mousemove", checkIsPageCached);   window.addEventListener("scroll", checkIsPageCached);   window.onload = checkIsPageCached();</script></body>@Uisg

